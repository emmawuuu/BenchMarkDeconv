# Example data
df_scRef_rmse <- data.frame(
cell_type = c("acinar","alpha","beta","delta","ductal","endothelial","epsilon","gamma",
"mast", "MHC class II", "PSC"),
SCDC = as.numeric(SCDC.RMSEs),
Bisque = as.numeric(BisqueRNA.RMSEs)
)
df_scRef_rmse
# Reshape the data into a long format
df_long_rmse <- reshape2::melt(df_scRef_rmse, id.vars = "cell_type", variable.name = "method", value.name = "rmse")
df_long_rmse
# Reshape the data into a long format
df_scRef_long_rmse <- reshape2::melt(df_scRef_rmse, id.vars = "cell_type", variable.name = "method", value.name = "rmse")
df_scRef_long_rmse
# Create a scatter plot with error bars using ggplot2
ggplot(df_scRef_long_rmse, aes(x = cell_type, y = correlation, color = method)) +
geom_point(position = position_jitter(width = 0.2)) +
geom_errorbar(aes(ymin = correlation - df_scRef_long_rmse$rmse[df_scRef_long_rmse$method == method],
ymax = correlation + df_scRef_long_rmse$rmse[df_scRef_long_rmse$method == method]),
width = 0.2, position = position_jitter(width = 0.2)) +
labs(x = "Cell Type", y = "RMSE", title = "RMSE with Error Bars") +
scale_color_manual(values = c("red", "blue"))
# Create a scatter plot with error bars using ggplot2
ggplot2(df_scRef_long_rmse, aes(x = cell_type, y = correlation, color = method)) +
geom_point(position = position_jitter(width = 0.2)) +
geom_errorbar(aes(ymin = correlation - df_scRef_long_rmse$rmse[df_scRef_long_rmse$method == method],
ymax = correlation + df_scRef_long_rmse$rmse[df_scRef_long_rmse$method == method]),
width = 0.2, position = position_jitter(width = 0.2)) +
labs(x = "Cell Type", y = "RMSE", title = "RMSE with Error Bars") +
scale_color_manual(values = c("red", "blue"))
# Plot pearson correlation for scRNA-seq refernece methods
library(ggplot2)
# Create a scatter plot with error bars using ggplot2
ggplot2(df_scRef_long_rmse, aes(x = cell_type, y = correlation, color = method)) +
geom_point(position = position_jitter(width = 0.2)) +
geom_errorbar(aes(ymin = correlation - df_scRef_long_rmse$rmse[df_scRef_long_rmse$method == method],
ymax = correlation + df_scRef_long_rmse$rmse[df_scRef_long_rmse$method == method]),
width = 0.2, position = position_jitter(width = 0.2)) +
labs(x = "Cell Type", y = "RMSE", title = "RMSE with Error Bars") +
scale_color_manual(values = c("red", "blue"))
# Create a scatter plot with error bars using ggplot2
ggplot(df_scRef_long_rmse, aes(x = cell_type, y = correlation, color = method)) +
geom_point(position = position_jitter(width = 0.2)) +
geom_errorbar(aes(ymin = correlation - df_scRef_long_rmse$rmse[df_scRef_long_rmse$method == method],
ymax = correlation + df_scRef_long_rmse$rmse[df_scRef_long_rmse$method == method]),
width = 0.2, position = position_jitter(width = 0.2)) +
labs(x = "Cell Type", y = "RMSE", title = "RMSE with Error Bars") +
scale_color_manual(values = c("red", "blue"))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("granulator")
library(granulator)
df_scRef_long_rmse
# Create a box plot of RMSE values
ggplot(df_scRef_long_rmse, aes(x = method, y = rmse)) +
geom_boxplot(fill = "lightblue") +
labs(x = "Method", y = "RMSE", title = "RMSE Values Box Plot")
# Create a box plot of RMSE values with different colors for each method
ggplot(df_scRef_long_rmse, aes(x = cell_type, y = rmse, fill = method)) +
geom_boxplot() +
labs(x = "Cell Type", y = "RMSE", title = "RMSE Values Box Plot") +
scale_fill_manual(values = c("red", "blue")) # Replace with the colors you want for each method
plot <- ggplot(df_scRef_long_rmse, aes(x = cell_type, y = rmse, fill = method)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method",
x = "Cell Type",
y = "RMSE",
fill = "Method")
ggplot(df_scRef_long_rmse, aes(x = cell_type, y = rmse, fill = method)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method",
x = "Cell Type",
y = "RMSE",
fill = "Method")
ggplot(df_scRef_long_rmse, aes(x = cell_type, y = rmse, color = method)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(position = position_jitter(width = 0.3), size = 3, alpha = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method",
x = "Cell Type",
y = "RMSE",
color = "Method")
print(plot <- ggplot(df_scRef_long_rmse, aes(x = cell_type, y = rmse, fill = method)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method",
x = "Cell Type",
y = "RMSE",
fill = "Method"))
# Create a box plot of RMSE values with different colors for each method
ggplot(df_scRef_long_rmse, aes(x = cell_type, y = rmse, fill = method)) +
geom_boxplot() +
labs(x = "Cell Type", y = "RMSE", title = "RMSE Values Box Plot") +
scale_fill_manual(values = c("red", "blue")) # Replace with the colors you want for each method
RMSE
# Create a box plot of RMSE values with different colors for each method
ggplot(df_scRef_long_rmse, aes(x = cell_type, y = rmse, color = method)) +
geom_boxplot(aes(group = cell_type), outlier.shape = NA) +
geom_jitter(aes(shape = method), position = position_jitter(width = 0.3), size = 3, alpha = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method",
x = "Cell Type",
y = "RMSE",
color = "Method",
shape = "Method")
final_results$stats
SCDC.RMSEs
SCDC.RMSEs.sub
BisqueRNA.RMSEs.sub
# Create a box plot of RMSE values with different colors for each method
ggplot(df_scRef_long_rmse.sub, aes(x = cell_type, y = rmse, color = method)) +
geom_boxplot(aes(group = cell_type), outlier.shape = NA) +
geom_jitter(aes(shape = method), position = position_jitter(width = 0.3), size = 3, alpha = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method 4 Cell Types",
x = "Cell Type",
y = "RMSE",
color = "Method",
shape = "Method")
#####################
# 4 cell types #
#####################
df_scRef_rmse.sub <- data.frame(
cell_type = c("alpha","beta","gamma","delta"),
SCDC = as.numeric(SCDC.RMSEs.sub),
Bisque = as.numeric(BisqueRNA.RMSEs.sub)
)
# Reshape the data into a long format
df_scRef_long_rmse.sub <- reshape2::melt(df_scRef_rmse.sub, id.vars = "cell_type", variable.name = "method", value.name = "rmse")
# Create a box plot of RMSE values with different colors for each method
ggplot(df_scRef_long_rmse.sub, aes(x = cell_type, y = rmse, color = method)) +
geom_boxplot(aes(group = cell_type), outlier.shape = NA) +
geom_jitter(aes(shape = method), position = position_jitter(width = 0.3), size = 3, alpha = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method 4 Cell Types",
x = "Cell Type",
y = "RMSE",
color = "Method",
shape = "Method")
final_results$stats$deconvolutionMethod_signature
final_results$stats$ols_sig1
final_results$stats
df_scRef_long_rmse
df_merged <- merge(df_scRef_long_rmse, final_results$stats$ols_sig1, by = c("cell_type", "method"))
final_results$stats$ols_sig1
df_appended <- df_scRef_long_rmse %>%
select(cell_type, method, rmse) %>%
rbind(rls_sig1dataframe %>% select(cell_type, method, rmse))
library(dplyr)
df_appended <- df_scRef_long_rmse %>%
select(cell_type, method, rmse) %>%
rbind(rls_sig1dataframe %>% select(cell_type, method, rmse))
df_appended <- df_scRef_long_rmse %>%
select(cell_type, method, rmse) %>%
rbind(final_results$stats$ols_sig1 %>% select(cell_type, method, rmse))
df_appended
df_scRef_long_rmse
df_appended <- df_scRef_long_rmse %>%
select("cell_type", "method", "rmse") %>%
rbind(final_results$stats$ols_sig1 %>% select("cell_type", "method", "rmse"))
colnames(df_scRef_long_rmse)
colnames(final_results$stats$ols_sig1)
#####################
# All 11 cell types #
#####################
df_scRef_rmse <- data.frame(
celltype = c("acinar","alpha","beta","delta","ductal","endothelial","epsilon","gamma",
"mast", "MHC class II", "PSC"),
SCDC = as.numeric(SCDC.RMSEs),
Bisque = as.numeric(BisqueRNA.RMSEs)
)
# Reshape the data into a long format
df_scRef_long_rmse <- reshape2::melt(df_scRef_rmse, id.vars = "celltype", variable.name = "method", value.name = "rmse")
# Create a box plot of RMSE values with different colors for each method
ggplot(df_scRef_long_rmse, aes(x = celltype, y = rmse, color = method)) +
geom_boxplot(aes(group = cell_type), outlier.shape = NA) +
geom_jitter(aes(shape = method), position = position_jitter(width = 0.3), size = 3, alpha = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method",
x = "Cell Type",
y = "RMSE",
color = "Method",
shape = "Method")
# Create a box plot of RMSE values with different colors for each method
ggplot(df_scRef_long_rmse, aes(x = celltype, y = rmse, color = method)) +
geom_boxplot(aes(group = celltype), outlier.shape = NA) +
geom_jitter(aes(shape = method), position = position_jitter(width = 0.3), size = 3, alpha = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method",
x = "Cell Type",
y = "RMSE",
color = "Method",
shape = "Method")
df_appended <- df_scRef_long_rmse %>%
+     select("celltype", "method", "rmse") %>%
+     rbind(final_results$stats$ols_sig1 %>% select("cell_type", "method", "rmse"))
df_appended <- df_scRef_long_rmse %>%
+     +     select("celltype", "method", "rmse") %>%
+     +     rbind(final_results$stats$ols_sig1 %>% select("celltype", "method", "rmse"))
df_appended <- df_scRef_long_rmse %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$ols_sig1 %>% select(celltype, method, rmse))
df_appended
df_appended <- df_scRef_long_rmse %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$ols_sig1 %>% select(celltype, method, rmse))
final_results$stats
df_rmse <- df_rmse %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$dtangle_sig1 %>% select(celltype, method, rmse))
########################
# Combine Methods RMSE #
########################
df_rmse <- df_scRef_long_rmse %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$ols_sig1 %>% select(celltype, method, rmse))
df_rmse <- df_rmse %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$dtangle_sig1 %>% select(celltype, method, rmse))
df_rmse
final_results$stats
# Add OLS
df_rmse <- df_scRef_long_rmse %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$ols_sig1 %>% select(celltype, method, rmse))
# Add dtangle
df_rmse <- df_rmse %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$dtangle_sig1 %>% select(celltype, method, rmse))
# Add nnls
df_rmse <- df_rmse %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$nnls_sig1 %>% select(celltype, method, rmse))
# Add qprog
df_rmse <- df_rmse %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$qprog_sig1 %>% select(celltype, method, rmse))
# Add rls
df_rmse <- df_rmse %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$rls_sig1 %>% select(celltype, method, rmse))
df_rmse
# Create a box plot of RMSE values with different colors for each method
ggplot(df_rmse, aes(x = celltype, y = rmse, color = method)) +
geom_boxplot(aes(group = celltype), outlier.shape = NA) +
geom_jitter(aes(shape = method), position = position_jitter(width = 0.3), size = 3, alpha = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method",
x = "Cell Type",
y = "RMSE",
color = "Method",
shape = "Method")
# Add OLS
df_rmse.sub <- df_scRef_long_rmse.sub %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$ols_sig2 %>% select(celltype, method, rmse))
################
# 4 cell types #
################
df_scRef_rmse.sub <- data.frame(
celltype = c("alpha","beta","gamma","delta"),
SCDC = as.numeric(SCDC.RMSEs.sub),
Bisque = as.numeric(BisqueRNA.RMSEs.sub)
)
# Reshape the data into a long format
df_scRef_long_rmse.sub <- reshape2::melt(df_scRef_rmse.sub, id.vars = "celltype", variable.name = "method", value.name = "rmse")
# Create a box plot of RMSE values with different colors for each method
ggplot(df_scRef_long_rmse.sub, aes(x = celltype, y = rmse, color = method)) +
geom_boxplot(aes(group = celltype), outlier.shape = NA) +
geom_jitter(aes(shape = method), position = position_jitter(width = 0.3), size = 3, alpha = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method 4 Cell Types",
x = "Cell Type",
y = "RMSE",
color = "Method",
shape = "Method")
# Add OLS
df_rmse.sub <- df_scRef_long_rmse.sub %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$ols_sig2 %>% select(celltype, method, rmse))
# Add dtangle
df_rmse.sub <- df_rmse.sub %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$dtangle_sig2 %>% select(celltype, method, rmse))
# Add nnls
df_rmse.sub <- df_rmse.sub %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$nnls_sig2 %>% select(celltype, method, rmse))
# Add qprog
df_rmse.sub <- df_rmse.sub %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$qprog_sig2 %>% select(celltype, method, rmse))
# Add rls
df_rmse.sub <- df_rmse.sub %>%
select(celltype, method, rmse) %>%
rbind(final_results$stats$rls_sig2 %>% select(celltype, method, rmse))
# Create a box plot of RMSE values with different colors for each method
ggplot(df_rmse.sub, aes(x = celltype, y = rmse, color = method)) +
geom_boxplot(aes(group = celltype), outlier.shape = NA) +
geom_jitter(aes(shape = method), position = position_jitter(width = 0.3), size = 3, alpha = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "RMSE by Cell Type and Method - 4 Cell Types",
x = "Cell Type",
y = "RMSE",
color = "Method",
shape = "Method")
SCDC.correlations
final_results$stats$ols_sig2
df_scRef_pcc <- data.frame(
celltype = c("acinar","alpha","beta","delta","ductal","endothelial","epsilon","gamma",
"mast", "MHC class II", "PSC"),
SCDC = as.numeric(SCDC.correlations),
Bisque = as.numeric(BisqueRNA.correlations)
)
# Reshape the data into a long format
df_scRef_long_pcc <- reshape2::melt(df_scRef_rmse, id.vars = "celltype", variable.name = "method", value.name = "pcc")
df_scRef_long_pcc
# Calculate mean for each cell type and method
summary_df_pcc <- df_scRef_long_pcc %>%
group_by(celltype, method) %>%
summarise(mean_pcc = mean(pcc))
# Create the heatmap
ggplot(summary_df_pcc, aes(x = celltype, y = method, fill = mean_pcc)) +
geom_tile() +
scale_fill_gradient2(low = "white", mid = "blue", high = "darkred", midpoint = median(summary_df$mean_pcc)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "PCC by Cell Type and Method",
x = "Cell Type",
y = "Method",
fill = "Mean PCC")
# Create the heatmap
ggplot(summary_df_pcc, aes(x = celltype, y = method, fill = mean_pcc)) +
geom_tile() +
scale_fill_gradient2(low = "white", mid = "blue", high = "darkred", midpoint = median(summary_df_pcc$mean_pcc)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "PCC by Cell Type and Method",
x = "Cell Type",
y = "Method",
fill = "Mean PCC")
# Calculate mean for each cell type and method
summary_df <- df_scRef_long_pcc %>%
group_by(celltype, method) %>%
summarise(mean_pcc = mean(pcc))
# Reshape the dataset to have pairwise comparisons between cell types
wide_summary_df <- summary_df %>%
spread(key = method, value = mean_pcc) %>%
select(-celltype)
pairwise_comparison_df <- expand_grid(CellType1 = colnames(wide_summary_df),
CellType2 = colnames(wide_summary_df))
pairwise_comparison_df$Difference <- abs(wide_summary_df[pairwise_comparison_df$CellType1] - wide_summary_df[pairwise_comparison_df$CellType2])
# Create the heatmap
ggplot(pairwise_comparison_df, aes(x = CellType1, y = CellType2, fill = Difference)) +
geom_tile() +
scale_fill_gradient2(low = "white", mid = "blue", high = "darkred", midpoint = median(pairwise_comparison_df$Difference)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "PCC Difference between Cell Types",
x = "Cell Type 1",
y = "Cell Type 2",
fill = "PCC Difference")
pairwise_comparison_df <- expand_grid(CellType1 = colnames(wide_summary_df),
CellType2 = colnames(wide_summary_df))
# Calculate mean for each cell type and method
summary_df <- df_scRef_long_pcc %>%
group_by(celltype, method) %>%
summarise(mean_pcc = mean(pcc))
# Reshape the dataset to have pairwise comparisons between cell types
wide_summary_df <- summary_df %>%
spread(key = method, value = mean_pcc) %>%
select(-celltype)
library(ggplot2)
library(reshape2)
library(tidyr)
# Reshape the dataset to have pairwise comparisons between cell types
wide_summary_df <- summary_df %>%
spread(key = method, value = mean_pcc) %>%
select(-celltype)
pairwise_comparison_df <- expand_grid(CellType1 = colnames(wide_summary_df),
CellType2 = colnames(wide_summary_df))
pairwise_comparison_df$Difference <- abs(wide_summary_df[pairwise_comparison_df$CellType1] - wide_summary_df[pairwise_comparison_df$CellType2])
pairwise_comparison_df
wide_summary_df
pairwise_comparison_df <- expand_grid(CellType1 = wide_summary_df$celltype,
CellType2 = wide_summary_df$celltype)
pairwise_comparison_df$Difference <- abs(wide_summary_df[pairwise_comparison_df$CellType1] - wide_summary_df[pairwise_comparison_df$CellType2])
pairwise_comparison_df
# Calculate mean for each cell type and method
summary_df <- df_scRef_long_pcc %>%
group_by(celltype, method) %>%
summarise(mean_pcc = mean(pcc))
# Create a new dataset with pairwise comparisons between cell types
pairwise_comparison_df <- expand_grid(CellType1 = unique(summary_df$celltype),
CellType2 = unique(summary_df$celltype),
Method = unique(summary_df$method))
# Calculate the absolute difference between PCC values
pairwise_comparison_df <- pairwise_comparison_df %>%
left_join(summary_df, by = c("CellType1" = "celltype", "Method")) %>%
rename(PCC1 = mean_pcc) %>%
left_join(summary_df, by = c("CellType2" = "celltype", "Method")) %>%
rename(PCC2 = mean_pcc) %>%
mutate(Difference = abs(PCC1 - PCC2))
# Calculate the absolute difference between PCC values
pairwise_comparison_df <- pairwise_comparison_df %>%
left_join(summary_df, by = c("CellType1" = "celltype", "method")) %>%
rename(PCC1 = mean_pcc) %>%
left_join(summary_df, by = c("CellType2" = "celltype", "method")) %>%
rename(PCC2 = mean_pcc) %>%
mutate(Difference = abs(PCC1 - PCC2))
pairwise_comparison_df
# Create a new dataset with pairwise comparisons between cell types
pairwise_comparison_df <- expand_grid(CellType1 = unique(summary_df$celltype),
CellType2 = unique(summary_df$celltype),
Method = unique(summary_df$method))
# Calculate the absolute difference between PCC values
pairwise_comparison_df <- pairwise_comparison_df %>%
left_join(summary_df, by = c("CellType1" = "celltype", "Method")) %>%
rename(PCC1 = mean_pcc) %>%
left_join(summary_df, by = c("CellType2" = "celltype", "Method")) %>%
rename(PCC2 = mean_pcc) %>%
mutate(Difference = abs(PCC1 - PCC2))
pairwise_comparison_df
summary_df
# Create a new dataset with pairwise comparisons between cell types
pairwise_comparison_df <- expand_grid(CellType1 = unique(summary_df$celltype),
CellType2 = unique(summary_df$celltype),
method = unique(summary_df$method))
# Calculate the absolute difference between PCC values
pairwise_comparison_df <- pairwise_comparison_df %>%
left_join(summary_df, by = c("CellType1" = "celltype", "method")) %>%
rename(PCC1 = mean_pcc) %>%
left_join(summary_df, by = c("CellType2" = "celltype", "method")) %>%
rename(PCC2 = mean_pcc) %>%
mutate(Difference = abs(PCC1 - PCC2))
# Create the heatmap
plot <- ggplot(pairwise_comparison_df, aes(x = CellType1, y = CellType2, fill = Difference)) +
geom_tile() +
facet_wrap(~ Method, ncol = 1) +
scale_fill_gradient2(low = "white", mid = "blue", high = "darkred", midpoint = median(pairwise_comparison_df$Difference)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "PCC Difference between Cell Types",
x = "Cell Type 1",
y = "Cell Type 2",
fill = "PCC Difference")
View(pairwise_comparison_df)
# Create the heatmap
ggplot(pairwise_comparison_df, aes(x = CellType1, y = CellType2, fill = Difference)) +
geom_tile() +
facet_wrap(~ Method, ncol = 1) +
scale_fill_gradient2(low = "white", mid = "blue", high = "darkred", midpoint = median(pairwise_comparison_df$Difference)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "PCC Difference between Cell Types",
x = "Cell Type 1",
y = "Cell Type 2",
fill = "PCC Difference")
# Calculate the absolute difference between PCC values
pairwise_comparison_df <- pairwise_comparison_df %>%
left_join(summary_df, by = c("CellType1" = "celltype", "Method")) %>%
rename(PCC1 = mean_pcc) %>%
left_join(summary_df, by = c("CellType2" = "celltype", "Method")) %>%
rename(PCC2 = mean_pcc) %>%
mutate(Difference = abs(PCC1 - PCC2))
# Create a new dataset with pairwise comparisons between cell types
pairwise_comparison_df <- expand_grid(CellType1 = unique(summary_df$celltype),
CellType2 = unique(summary_df$celltype),
method = unique(summary_df$method))
# Calculate the absolute difference between PCC values
pairwise_comparison_df <- pairwise_comparison_df %>%
left_join(summary_df, by = c("CellType1" = "celltype", "method")) %>%
rename(PCC1 = mean_pcc) %>%
left_join(summary_df, by = c("CellType2" = "celltype", "method")) %>%
rename(PCC2 = mean_pcc) %>%
mutate(Difference = abs(PCC1 - PCC2))
# Create the heatmap
ggplot(pairwise_comparison_df, aes(x = CellType1, y = CellType2, fill = Difference)) +
geom_tile() +
facet_wrap(~ Method, ncol = 1) +
scale_fill_gradient2(low = "white", mid = "blue", high = "darkred", midpoint = median(pairwise_comparison_df$Difference)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "PCC Difference between Cell Types",
x = "Cell Type 1",
y = "Cell Type 2",
fill = "PCC Difference")
# Create the heatmap
ggplot(pairwise_comparison_df, aes(x = CellType1, y = CellType2, fill = Difference)) +
geom_tile() +
facet_wrap(~ method, ncol = 1) +
scale_fill_gradient2(low = "white", mid = "blue", high = "darkred", midpoint = median(pairwise_comparison_df$Difference)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "PCC Difference between Cell Types",
x = "Cell Type 1",
y = "Cell Type 2",
fill = "PCC Difference")
